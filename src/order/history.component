<can-component tag="pmo-order-history">
  <view>
    <can-import from="place-my-order/order/list.component" />

    <div class="order-history">
      <div class="order header">
        <address>Name / Address / Phone</address>
        <div class="items">Order</div>
        <div class="total">Total</div>
        <div class="actions">Action</div>
      </div>

      <pmo-order-list
        orders:from="newOrdersPromise"
        listTitle:raw="New Orders"
        status:raw="new"
        statusTitle:raw="New Order!"
        action:raw="preparing"
        actionTitle:raw="Preparing"
        emptyMessage:raw="No new orders" />

      <pmo-order-list
        orders:from="preparingOrdersPromise"
        listTitle:raw="Preparing"
        status:raw="preparing"
        statusTitle:raw="Preparing"
        action:raw="delivery"
        actionTitle:raw="Out for delivery"
        emptyMessage:raw="No orders preparing"/>

      <pmo-order-list
        orders:from="deliveryOrdersPromise"
        listTitle:raw="Out for delivery"
        status:raw="delivery"
        statusTitle:raw="Out for delivery"
        action:raw="delivered"
        actionTitle:raw="Delivered"
        emptyMessage:raw="No orders are being delivered"/>

      <pmo-order-list
        orders:from="deliveredOrdersPromise"
        listTitle:raw="Delivered"
        status:raw="delivered"
        statusTitle:raw="Delivered"
        action:raw=""
        emptyMessage:raw="No delivered orders"/>
    </div>
  </view>
  <script type="view-model">
    import { DefineMap } from 'can';
    import Order from '~/models/order';

    export default DefineMap.extend({
      get newOrdersPromise() {
        return Order.getList({ filter: { status: 'new' } });
      },
      get preparingOrdersPromise() {
        return Order.getList({ filter: { status: 'preparing' } });
      },
      get deliveryOrdersPromise() {
        return Order.getList({ filter: { status: 'delivery' } });
      },
      get deliveredOrdersPromise() {
        return Order.getList({ filter: { status: 'delivered' } });
      }
    });
  </script>
</can-component>
